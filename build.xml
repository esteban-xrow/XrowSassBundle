<?xml version="1.0" encoding="UTF-8"?>
 
<project name="xrowsass" default="build">

  <target name="create build dir" description="create build dir">
    <mkdir dir="${workspace}/build"/>
  </target>
  
  <property name="workspace" value="${basedir}" />
  <property name="sourcedir" value="${basedir}/src" />
  <property name="builddir" value="${workspace}/build" />

  <target name="build"
  depends="prepare,lint,phploc,pdepend,phpcpd,phpmd-ci,phpcs-ci,phpdoc,phpunit,phpcb"/>

  <target name="build-parallel" depends="prepare,lint,tools-parallel,phpunit,phpcb"/>

  <target name="tools-parallel" description="Run tools in parallel">
    <parallel threadCount="2">
      <sequential>
        <antcall target="pdepend"/>
        <antcall target="phpmd-ci"/>
      </sequential>
      <antcall target="phpcpd"/>
      <antcall target="phpcs-ci"/>
      <antcall target="phploc"/>
      <antcall target="phpdoc"/>
    </parallel>
  </target>

  <target name="clean" description="Cleanup build artifacts">
    <delete dir="${builddir}/api"/>
    <delete dir="${builddir}/code-browser"/>
    <delete dir="${builddir}/coverage"/>
    <delete dir="${builddir}/logs"/>
    <delete dir="${builddir}/pdepend"/>
    <delete dir="${builddir}/docs/*"/>
  </target>

  <target name="prepare" depends="clean" description="Prepare for build">
    <mkdir dir="${builddir}/api"/>
    <mkdir dir="${builddir}/code-browser"/>
    <mkdir dir="${builddir}/coverage"/>
    <mkdir dir="${builddir}/logs"/>
    <mkdir dir="${builddir}/pdepend"/>
  </target>

 
 <target name="lint"
         unless="lint.done"
         description="Perform syntax check of sourcecode files">
  <apply executable="php" taskname="lint">
   <arg value="-l" />

   <fileset dir="${basedir}">
    <include name="**/*.php" />
    <modified />
   </fileset>
  </apply>

  <property name="lint.done" value="true"/>
 </target>

  <target name="phploc" description="Measure project size using PHPLOC">
    <exec executable="phploc" failonerror="false">
    <arg value="--log-csv" />
    <arg value="${builddir}/logs/phploc.csv" />
    <arg path="${sourcedir}" />
    </exec>
  </target>

  <target name="pdepend" description="Calculate software metrics using PHP_Depend">
    <exec executable="pdepend" failonerror="false">
      <arg value="--jdepend-xml=${builddir}/jdepend.xml" />
      <arg value="--jdepend-chart=${builddir}/pdepend/dependencies.svg" />
      <arg value="--overview-pyramid=${builddir}/pdepend/overview-pyramid.svg" />
      <arg path="${sourcedir}" />
    </exec>
  </target>

  <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
    <exec executable="phpmd" failonerror="false">
      <arg path="${basedir}/src" />
      <arg value="text" />
      <arg value="${workspace}/phpmd.xml" />

    </exec>
  </target>

  <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
    <exec executable="phpmd" failonerror="false">
      <arg value="${sourcedir}" />
      <arg value="xml" />
      <arg value="${workspace}/phpmd.xml" />
      <arg value="--reportfile" />
      <arg value="${workspace}/build/logs/pmd.xml" />
    </exec>
  </target>

  <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
    <exec executable="phpcs" failonerror="false">
      <arg value="--standard=PSR2" />
      <arg path="${sourcedir}" />
    </exec>
  </target>

  <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
    <exec executable="phpcs" failonerror="false">
      <arg value="--report=checkstyle" />
      <arg value="--report-file=${builddir}/logs/checkstyle.xml" />
      <arg value="--standard=PSR2" />
      <arg path="${sourcedir}" />
    </exec>
  </target>

  <target name="phpcpd" description="Find duplicate code using PHPCPD">
    <exec executable="phpcpd" failonerror="false">
      <arg value="--log-pmd" />
      <arg value="${builddir}/logs/pmd-cpd.xml" />
      <arg path="${sourcedir}" />
    </exec>
  </target>

  <target name="phpdoc" description="Generate API documentation using phpDox">
    <exec executable="phpdoc" failonerror="false">
      <arg line="-d '${sourcedir}' -t '${builddir}/docs' --title='Tempo' " />
    </exec>
  </target>

  <target name="phpunit" description="Run unit tests with PHPUnit">
    <exec executable="phpunit" failonerror="false">
      <arg value="-c" />
      <arg path="${basedir}/phpunit.xml" />
    </exec>
  </target>

  <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
    <exec executable="phpcb" failonerror="false">
      <arg value="--log" />
      <arg path="${builddir}/logs" />
      <arg value="--source" />
      <arg path="${sourcedir}" />
      <arg value="--output" />
      <arg path="${builddir}/code-browser" />
    </exec>
  </target>
</project>